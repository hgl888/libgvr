GVR修改


修改sDaydreamPhoneOverrideForTesting
修改libgvr.so
修改MutableEGLConfigChooser
修改scanlineRacer的swapmode

a.编辑*\smali\com\google\vr\vrcore\base\api\VrCoreUtils.smali，修改"com.google.vr.vrcore"为 "com.baofeng.mj"
a.编辑*\smali\com\google\vr\internal\controller\ControllerServiceBridge.smali，修改"com.google.vr.vrcore"为"com.baofeng.mj"
a.编辑*\smali\com\google\vr\internal\controller\ServiceBridge.smali，修改"com.google.vr.vrcore"为"com.baofeng.mj"
b.编辑*\smali\com\google\vr\sdk\controller\ControllerManager.smali，修改"com.google.vr.vrcore"为"com.baofeng.mj"


1.0.2
.text:000834F6                 CMP             R4, #0
.text:000834F8                 ITE NE
.text:000834FA                 MOVNE           R4, #4
.text:000834FC                 MOVEQ           R4, #0
00 2C 14 BF 04 24 00 24
改为
00 2C 14 BF 04 24 04 24
只有dev-keys

1.0.3
.text:000834F6                 CMP             R4, #0
.text:000834F8                 ITE NE
.text:000834FA                 MOVNE           R4, #4
.text:000834FC                 MOVEQ           R4, #0
有dev-keys和test-keys

1.1.0
.text:000834F6                 CMP             R4, #0
.text:000834F8                 ITE NE
.text:000834FA                 MOVNE           R4, #4
.text:000834FC                 MOVEQ           R4, #0
00 2C 14 BF 04 24 00 24
有dev-keys和test-keys

2,3,4,6,7同上

8
.text:000A6CC2                 CMP             R3, #0
.text:000A6CC4                 ITE EQ
.text:000A6CC6                 MOVEQ           R4, #0
.text:000A6CC8                 MOVNE           R4, #4
00 2B 0C BF 00 24  04 24
改为
00 2B 0C BF 04 24  04 24


1.libgvr.so修改, 改方法有兼容问题，使用上面的方法
FEATURE_VR_MODE_HIGH_PERFORMANCE
46 45 41 54 55 52 45 5F 56 52 5F 4D 4F 44 45 5F 48 49 47 48 5F 50 45
52 46 4F 52 4D 41 4E 43 45 0setSwapMode0

FEATURE_WIFI
46 45 41 54 55 52 45 5F 57 49 46 49 00 00 00 00 00 00 00 00 00 00 00 
00 00 00 00 00 00 00 00 00 00

2.0 替换MojingSDK.smali， 替换libmojing.so

2.1 GvrSurfaceView.smali修改

com/google/vr/ndk/base/GvrSurfaceView
.method public setSwapMode(I)V
    .locals 2
    .prologue
    添加
    invoke-static {}, Lcom/baofeng/mojing/MojingSDK;->getSwapMode()I
    move-result p1

2.2 com/baofeng/mojing/unity/MojingVrActivity,onCreate函数 添加

    invoke-virtual {p0}, Lcom/baofeng/mojing/unity/MojingVrActivity;->getApplicationContext()Landroid/content/Context;
    move-result-object v3
    sput-object v3, Lcom/baofeng/mojing/MojingSDK;->mContext:Landroid/content/Context;

2.3  com/baofeng/mojing/unity/MojingVrActivity,onCreate函数
          invoke-virtual {v3, v4}, Ljava/lang/reflect/Constructor;->newInstance([Ljava/lang/Object;)Ljava/lang/Object;
          move-result-object v4
          check-cast v4, Lcom/unity3d/player/UnityPlayer;
          iput-object v4, p0, Lcom/baofeng/mojing/unity/MojingVrActivity;->mUnityPlayer:Lcom/unity3d/player/UnityPlayer;
      后面添加
 invoke-static {}, Lcom/baofeng/mojing/MojingSDK;->hookUnityFun()V

3.在程序启动时运行，在
    com/baofeng/mojing/unity/MojingVrActivity,onCreate函数 添加

    .line 121
    invoke-static {}, Lcom/baofeng/mojing/MojingSDK;->setsDaydreamPhoneOverrideForTesting()V

    .line 122
    invoke-static {}, Lcom/baofeng/mojing/MojingSDK;->setsFingerprint()V

代码实现如下：
    private static void setsDaydreamPhoneOverrideForTesting() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            try {
                Class cls = Class.forName("com.google.vr.ndk.base.DaydreamUtils");
                Field f = cls.getDeclaredField("sDaydreamPhoneOverrideForTesting");
                f.setAccessible(true);
                f.set(null, true);
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            } catch (NoSuchFieldException e) {
                e.printStackTrace();
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }
        }
    }


    private static void setsFingerprint() {
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            try {
                Class cls = Class.forName("android.os.Build");
                Field f = cls.getDeclaredField("FINGERPRINT");
                f.setAccessible(true);
                String fingerPrint = (String) f.get(null);
                if (!TextUtils.isEmpty(fingerPrint)) {
                    if (!fingerPrint.endsWith("dev-keys")) {
                        String end = fingerPrint.substring(fingerPrint.length() - 8);
                        String newFingerPrint = fingerPrint.replace(end, "dev-keys");
                        f.set(null, newFingerPrint);
                    }
                }
            } catch (ClassNotFoundException e) {
                e.printStackTrace();
            } catch (NoSuchFieldException e) {
                e.printStackTrace();
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            }
        }
    }


4，封装egl hook接口，添加位置：com/google/vr/ndk/base/GvrLayout->init-> return-void 前，
  invoke-static {}, Lcom/baofeng/mojing/MojingSDK;->hookFun()V
  com.unity3d.unitygvr.GoogleVR->resume() 添加  MojingSDK.enableShowTip(true);
  smali :
  const/4 v0, 0x1
  invoke-static {v0}, Lcom/baofeng/mojing/MojingSDK;->enableShowTip(Z)V

  com.unity3d.unitygvr.GoogleVR->pause() 添加  MojingSDK.enableShowTip(false);
  smali:
  const/4 v0, 0x0
  invoke-static {v0}, Lcom/baofeng/mojing/MojingSDK;->enableShowTip(Z)V


代码并且实现如下：
typedef EGLImageKHR (*FP_eglCreateImageKHR)(EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list);
FP_eglCreateImageKHR pfun_eglCreateImageKHR = NULL;
EGLImageKHR mjeglCreateImageKHR(EGLDisplay dpy, EGLContext ctx, EGLenum target, EGLClientBuffer buffer, const EGLint *attrib_list)
{
    LOGE("mjeglCreateImageKHR");
    EGLint eglImgAttrs[] = { EGL_IMAGE_PRESERVED_KHR, EGL_TRUE, EGL_NONE, EGL_NONE };
    EGLImageKHR img = pfun_eglCreateImageKHR(dpy, eglGetCurrentContext(), EGL_GL_TEXTURE_2D_KHR, buffer, eglImgAttrs);
    return img;
}

typedef EGLClientBuffer (*FP_eglCreateNativeClientBufferANDROID)(const EGLint *attrib_list);
FP_eglCreateNativeClientBufferANDROID pfun_eglCreateNativeClientBufferANDROID = NULL;
EGLClientBuffer mjeglCreateNativeClientBufferANDROID (const EGLint *attrib_list)
{
    LOGE("mjeglCreateNativeClientBufferANDROID");
    GLuint textureId;
    glGenTextures ( 1, &textureId );
    glBindTexture ( GL_TEXTURE_2D, textureId );
    int width = attrib_list[1];
    int height = attrib_list[3];
    glTexParameteri ( GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST );
    glTexParameteri ( GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST );
    glTexImage2D ( GL_TEXTURE_2D, 0, GL_RGBA, width, height, 0, GL_RGBA, GL_UNSIGNED_BYTE, NULL );
    return (EGLClientBuffer)textureId;
}


//typedef void (*__eglMustCastToProperFunctionPointerType)(void);
EGLAPI __eglMustCastToProperFunctionPointerType (*old_eglGetProcAddress)(const char *procname) = NULL;
EGLAPI __eglMustCastToProperFunctionPointerType mj_eglGetProcAddress(const char *procname)
{
    LOGE("mj_eglGetProcAddress");
    __eglMustCastToProperFunctionPointerType pfun = old_eglGetProcAddress(procname);

    if(strcmp(procname, "eglCreateImageKHR") == 0)
    {
        LOGE("mj_eglGetProcAddress, eglCreateImageKHR");
        pfun_eglCreateImageKHR = (FP_eglCreateImageKHR)pfun;
        pfun = (__eglMustCastToProperFunctionPointerType)mjeglCreateImageKHR;
    }
    if(strcmp(procname, "eglCreateNativeClientBufferANDROID") == 0 )
    {
        LOGE("mj_eglGetProcAddress, eglCreateNativeClientBufferANDROID");
        pfun_eglCreateNativeClientBufferANDROID = (FP_eglCreateNativeClientBufferANDROID)pfun;
        pfun = (__eglMustCastToProperFunctionPointerType)mjeglCreateNativeClientBufferANDROID;
    }
    return pfun;
}

5、
com/google/vr/cardboard/MutableEglConfigChooser类中
public EGLConfig chooseConfig(EGL10 var1, EGLDisplay var2) {
  // int[] var3 = new int[]{12324, 8, 12323, 8, 12322, 8, 12321, 0, 12325, 0, 12326, 0, 12352, 64, 12339, 4100, 12344};
  4100 修改为4

6、
com/google/vr/cardboard/MutableEglConfigChooser类中
  private static EGLConfig chooseConfig(EGL10 var0, EGLDisplay var1, EGLConfig[] var2, boolean var3) {
        EGLConfig[] var4 = var2;
        int var5 = var2.length;

        for(int var6 = 0; var6 < var5; ++var6) {
            EGLConfig var7 = var4[var6];
            int var8 = findConfigAttrib(var0, var1, var7, 12325, 0);
            int var9 = findConfigAttrib(var0, var1, var7, 12326, 0);
            int var10 = findConfigAttrib(var0, var1, var7, 12324, 0);
            int var11 = findConfigAttrib(var0, var1, var7, 12323, 0);
            int var12 = findConfigAttrib(var0, var1, var7, 12322, 0);
            int var13 = findConfigAttrib(var0, var1, var7, 12339, 0);
            if(var10 == 8 && var11 == 8 && var12 == 8 && var8 == 0 && var9 == 0 && (!var3 || (var13 & 0x4) != 0)) {
                return var7;
            }
        }
// 4094 ->4
//        for(int var6 = 0; var6 < var5; ++var6)
//        {
//            EGLConfig var7 = var4[var6];
//            return var7;
//
//        }

        return null;
    }


#################################

 备份：

 .method private static setsDaydreamPhoneOverrideForTesting()V
     .locals 5

     .prologue
     .line 253
     :try_start_0
     const-string v3, "com.google.vr.ndk.base.DaydreamUtils"

     invoke-static {v3}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

     move-result-object v0

     .line 254
     .local v0, "cls":Ljava/lang/Class;
     const-string v3, "sDaydreamPhoneOverrideForTesting"

     invoke-virtual {v0, v3}, Ljava/lang/Class;->getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;

     move-result-object v2

     .line 255
     .local v2, "f":Ljava/lang/reflect/Field;
     const/4 v3, 0x1

     invoke-virtual {v2, v3}, Ljava/lang/reflect/Field;->setAccessible(Z)V

     .line 256
     const/4 v3, 0x0

     const/4 v4, 0x1

     invoke-static {v4}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

     move-result-object v4

     invoke-virtual {v2, v3, v4}, Ljava/lang/reflect/Field;->set(Ljava/lang/Object;Ljava/lang/Object;)V
     :try_end_0
     .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
     .catch Ljava/lang/NoSuchFieldException; {:try_start_0 .. :try_end_0} :catch_1
     .catch Ljava/lang/IllegalAccessException; {:try_start_0 .. :try_end_0} :catch_2

     .line 266
     .end local v2    # "f":Ljava/lang/reflect/Field;
     :goto_0
     return-void

     .line 257
     :catch_0
     move-exception v1

     .line 258
     .local v1, "e":Ljava/lang/ClassNotFoundException;
     invoke-virtual {v1}, Ljava/lang/ClassNotFoundException;->printStackTrace()V

     goto :goto_0

     .line 259
     .end local v1    # "e":Ljava/lang/ClassNotFoundException;
     :catch_1
     move-exception v1

     .line 260
     .local v1, "e":Ljava/lang/NoSuchFieldException;
     invoke-virtual {v1}, Ljava/lang/NoSuchFieldException;->printStackTrace()V

     goto :goto_0

     .line 261
     .end local v1    # "e":Ljava/lang/NoSuchFieldException;
     :catch_2
     move-exception v1

     .line 262
     .local v1, "e":Ljava/lang/IllegalAccessException;
     invoke-virtual {v1}, Ljava/lang/IllegalAccessException;->printStackTrace()V

     goto :goto_0
 .end method


 .method private static setsFingerprint()V
     .locals 7

     .prologue
     .line 270
     :try_start_0
     const-string v6, "android.os.Build"

     invoke-static {v6}, Ljava/lang/Class;->forName(Ljava/lang/String;)Ljava/lang/Class;

     move-result-object v0

     .line 271
     .local v0, "cls":Ljava/lang/Class;
     const-string v6, "FINGERPRINT"

     invoke-virtual {v0, v6}, Ljava/lang/Class;->getDeclaredField(Ljava/lang/String;)Ljava/lang/reflect/Field;

     move-result-object v3

     .line 272
     .local v3, "f":Ljava/lang/reflect/Field;
     const/4 v6, 0x1

     invoke-virtual {v3, v6}, Ljava/lang/reflect/Field;->setAccessible(Z)V

     .line 273
     const/4 v6, 0x0

     invoke-virtual {v3, v6}, Ljava/lang/reflect/Field;->get(Ljava/lang/Object;)Ljava/lang/Object;

     move-result-object v4

     check-cast v4, Ljava/lang/String;

     .line 274
     .local v4, "fingerPrint":Ljava/lang/String;
     invoke-static {v4}, Landroid/text/TextUtils;->isEmpty(Ljava/lang/CharSequence;)Z

     move-result v6

     if-nez v6, :cond_0

     .line 276
     const-string v6, "dev-keys"

     invoke-virtual {v4, v6}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

     move-result v6

     if-nez v6, :cond_0

     .line 277
     invoke-virtual {v4}, Ljava/lang/String;->length()I

     move-result v6

     add-int/lit8 v6, v6, -0x8

     invoke-virtual {v4, v6}, Ljava/lang/String;->substring(I)Ljava/lang/String;

     move-result-object v2

     .line 278
     .local v2, "end":Ljava/lang/String;
     const-string v6, "dev-keys"

     invoke-virtual {v4, v2, v6}, Ljava/lang/String;->replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;

     move-result-object v5

     .line 279
     .local v5, "newFingerPrint":Ljava/lang/String;
     const/4 v6, 0x0

     invoke-virtual {v3, v6, v5}, Ljava/lang/reflect/Field;->set(Ljava/lang/Object;Ljava/lang/Object;)V
     :try_end_0
     .catch Ljava/lang/ClassNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
     .catch Ljava/lang/NoSuchFieldException; {:try_start_0 .. :try_end_0} :catch_1
     .catch Ljava/lang/IllegalAccessException; {:try_start_0 .. :try_end_0} :catch_2

     .line 289
     .end local v2    # "end":Ljava/lang/String;
     .end local v3    # "f":Ljava/lang/reflect/Field;
     .end local v4    # "fingerPrint":Ljava/lang/String;
     .end local v5    # "newFingerPrint":Ljava/lang/String;
     :cond_0
     :goto_0
     return-void

     .line 282
     :catch_0
     move-exception v1

     .line 283
     .local v1, "e":Ljava/lang/ClassNotFoundException;
     invoke-virtual {v1}, Ljava/lang/ClassNotFoundException;->printStackTrace()V

     goto :goto_0

     .line 284
     .end local v1    # "e":Ljava/lang/ClassNotFoundException;
     :catch_1
     move-exception v1

     .line 285
     .local v1, "e":Ljava/lang/NoSuchFieldException;
     invoke-virtual {v1}, Ljava/lang/NoSuchFieldException;->printStackTrace()V

     goto :goto_0

     .line 286
     .end local v1    # "e":Ljava/lang/NoSuchFieldException;
     :catch_2
     move-exception v1

     .line 287
     .local v1, "e":Ljava/lang/IllegalAccessException;
     invoke-virtual {v1}, Ljava/lang/IllegalAccessException;->printStackTrace()V

     goto :goto_0
 .end method
